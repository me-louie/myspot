{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Profile.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makePost } from \"../app/actions\";\nimport Post from \"./feed/Post\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  header: {\n    fontSize: 20,\n    // margin: theme.spacing(2, 0),\n    color: theme.palette.primary\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  }\n});\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.updateTitle = title => {\n      this.setState({\n        title\n      });\n    };\n\n    this.updateContent = content => {\n      this.setState({\n        content\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        username: this.props.username\n      });\n    };\n\n    this.handleSubmitPost = () => {\n      // dispatches actions to add msg\n      this.props.makePost(this.state); // // resets state back to empty string\n      // this.setState({ input: \"\" });\n\n      console.log(this.state);\n    };\n\n    this.state = {\n      // id: 1,\n      // userID: 1,\n      username: \"\",\n      content: \"\",\n      title: \"\",\n      type: \"\" // usersLiked: new Set([]),\n\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Create a new post\"), /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": \"PostType\",\n      name: \"postType\",\n      value: this.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"playlist\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 26\n        }\n      }),\n      label: \"Playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"album\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 26\n        }\n      }),\n      label: \"Album\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: \"song\",\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 55\n        }\n      }),\n      label: \"Song\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => this.updateTitle(event.target.value),\n      value: this.state.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Content:\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: event => this.updateContent(event.target.value),\n      value: this.state.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmitPost,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Create a new post\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, this.props.posts && this.props.posts.length ? this.props.posts.map(p => /*#__PURE__*/React.createElement(Post, {\n      key: p.id,\n      postdata: p // toggleLike={() => toggleLike({ post: p, userId: 7 })}\n      // userId={7}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"h3\", {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Hmm..no posts yet. You should make one!\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  username: state.username,\n  posts: state.posts\n});\n\nexport default connect(mapStateToProps, {\n  makePost\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Profile.js"],"names":["React","Button","connect","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Typography","Paper","withStyles","makePost","Post","styles","theme","root","flexGrow","header","fontSize","color","palette","primary","paper","padding","spacing","margin","textAlign","text","secondary","Profile","Component","constructor","props","handleChange","event","setState","type","target","value","updateTitle","title","updateContent","content","componentDidMount","username","handleSubmitPost","state","console","log","render","classes","input","posts","length","map","p","id","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { makePost } from \"../app/actions\";\r\nimport Post from \"./feed/Post\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    // margin: theme.spacing(2, 0),\r\n    color: theme.palette.primary,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n});\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // id: 1,\r\n      // userID: 1,\r\n      username: \"\",\r\n      content: \"\",\r\n      title: \"\",\r\n      type: \"\",\r\n      // usersLiked: new Set([]),\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ type: event.target.value });\r\n  };\r\n\r\n  updateTitle = (title) => {\r\n    this.setState({ title });\r\n  };\r\n\r\n  updateContent = (content) => {\r\n    this.setState({ content });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ username: this.props.username });\r\n  };\r\n  handleSubmitPost = () => {\r\n    // dispatches actions to add msg\r\n    this.props.makePost(this.state);\r\n    // // resets state back to empty string\r\n    // this.setState({ input: \"\" });\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <Typography className={classes.header}>Create a new post</Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <FormLabel component=\"legend\">Type</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"PostType\"\r\n              name=\"postType\"\r\n              value={this.value}\r\n              onChange={this.handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"playlist\"\r\n                control={<Radio />}\r\n                label=\"Playlist\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"album\"\r\n                control={<Radio />}\r\n                label=\"Album\"\r\n              />\r\n              <FormControlLabel value=\"song\" control={<Radio />} label=\"Song\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Typography>Title</Typography>\r\n          <input\r\n            onChange={(event) => this.updateTitle(event.target.value)}\r\n            value={this.state.input}\r\n          />\r\n          <Typography>Content:</Typography>\r\n          <input\r\n            onChange={(event) => this.updateContent(event.target.value)}\r\n            value={this.state.content}\r\n          />\r\n        </Paper>\r\n\r\n        <Button onClick={this.handleSubmitPost} color=\"primary\">\r\n          Create a new post\r\n        </Button>\r\n\r\n        <div>\r\n          {this.props.posts && this.props.posts.length ? (\r\n            this.props.posts.map((p) => (\r\n              <Post\r\n                key={p.id}\r\n                postdata={p}\r\n                // toggleLike={() => toggleLike({ post: p, userId: 7 })}\r\n                // userId={7}\r\n              />\r\n            ))\r\n          ) : (\r\n            <h3 color=\"primary\">Hmm..no posts yet. You should make one!</h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.username,\r\n  posts: state.posts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { makePost })(\r\n  withStyles(styles)(Profile)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}