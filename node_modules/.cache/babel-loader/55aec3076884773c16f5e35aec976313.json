{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Sidebar.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Post from \"./Post\";\nimport Playlists from \"./Playlists\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport AlbumIcon from \"@material-ui/icons/Album\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toggleSidebar } from \"../app/actions\";\nimport contentType from \"../data/ContentTypeEnum\"; // import ProfilePage from \"./content-page/ProfilePage\";\n// import FeedPage from \"./content-page/FeedPage\";\n// import HomePage from \"./content-page/HomePage\";\n\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Followers from \"./Followers\";\nimport Following from \"./Following\";\nimport NowPlaying from \"./NowPlaying\";\nimport Profile from \"./Profile\";\nimport Feed from \"./Feed\";\nimport Settings from \"./Settings\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    textDecoration: \"none\",\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  sidebarItem: {\n    display: \"flex\",\n    flexGrow: 1,\n    flexShrink: 1,\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    color: \"black\"\n  }\n});\n\nclass Sidebar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDrawerClose = () => {\n      this.props.toggleSideBar();\n    };\n\n    this.getSidebarIcon = text => {\n      switch (text) {\n        case contentType.LISTENINGTO:\n          return /*#__PURE__*/React.createElement(PlayCircleFilledIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.PLAYLISTS:\n          return /*#__PURE__*/React.createElement(QueueMusicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.POSTS:\n          return /*#__PURE__*/React.createElement(AudiotrackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWERS:\n          return /*#__PURE__*/React.createElement(MicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWING:\n          return /*#__PURE__*/React.createElement(HeadsetIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FAVOURITES:\n          return /*#__PURE__*/React.createElement(FavoriteIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(AccountCircleIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.processTextForURL = text => {\n      if (text === contentType.LISTENINGTO) {\n        return \"whatimlisteningto\";\n      }\n\n      return text.toLowerCase();\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: this.props.open,\n        [classes.drawerClose]: !this.props.open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: this.props.open,\n          [classes.drawerClose]: !this.props.open\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: this.props.username // onClick={() => this.selectView(this.props.username)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.sidebarItem,\n      to: \"/\" + this.props.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: this.props.username,\n      color: \"inhereit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }))), [contentType.LISTENINGTO, contentType.ALBUMS, contentType.PLAYLISTS, contentType.FOLLOWERS, contentType.FOLLOWING].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text // onClick={() => this.selectView(text)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: classes.sidebarItem,\n      to: \"/\" + this.props.username + \"/\" + this.processTextForURL(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, [contentType.FAVOURITES].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Profile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/albums\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Post, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/playlists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Playlists, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/followers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Followers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Following, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/whatimlisteningto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NowPlaying, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/feed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Feed, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/:user/settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    open: state.isSidebarOpen,\n    username: state.username // selectedContentPage: state.selectedContentPage,\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleSideBar: () => dispatch(toggleSidebar())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(Sidebar));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Sidebar.js"],"names":["React","clsx","Post","Playlists","Drawer","List","CssBaseline","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","AccountCircleIcon","AudiotrackIcon","HeadsetIcon","MicIcon","FavoriteIcon","QueueMusicIcon","PlayCircleFilledIcon","AlbumIcon","connect","withStyles","toggleSidebar","contentType","Link","Route","Switch","Followers","Following","NowPlaying","Profile","Feed","Settings","drawerWidth","styles","theme","root","display","menuButton","marginRight","hide","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","textDecoration","mixins","content","flexGrow","sidebarItem","color","Sidebar","Component","handleDrawerClose","props","toggleSideBar","getSidebarIcon","text","LISTENINGTO","PLAYLISTS","POSTS","FOLLOWERS","FOLLOWING","FAVOURITES","processTextForURL","toLowerCase","render","classes","open","paper","direction","username","ALBUMS","map","index","mapStateToProps","state","isSidebarOpen","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Post from \"./Post\";\r\nimport Playlists from \"./Playlists\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { toggleSidebar } from \"../app/actions\";\r\nimport contentType from \"../data/ContentTypeEnum\";\r\n// import ProfilePage from \"./content-page/ProfilePage\";\r\n// import FeedPage from \"./content-page/FeedPage\";\r\n// import HomePage from \"./content-page/HomePage\";\r\n\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Followers from \"./Followers\";\r\nimport Following from \"./Following\";\r\nimport NowPlaying from \"./NowPlaying\";\r\nimport Profile from \"./Profile\";\r\nimport Feed from \"./Feed\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    textDecoration: \"none\",\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  sidebarItem: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexShrink: 1,\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nclass Sidebar extends React.Component {\r\n  handleDrawerClose = () => {\r\n    this.props.toggleSideBar();\r\n  };\r\n\r\n  // This is only temporary and will need to be switched over to redux global state\r\n  // selectView = (text) => {\r\n  //   this.setState({ viewPage: text });\r\n  // };\r\n\r\n  getSidebarIcon = (text) => {\r\n    switch (text) {\r\n      case contentType.LISTENINGTO:\r\n        return <PlayCircleFilledIcon />;\r\n      case contentType.PLAYLISTS:\r\n        return <QueueMusicIcon />;\r\n      case contentType.POSTS:\r\n        return <AudiotrackIcon />;\r\n      case contentType.FOLLOWERS:\r\n        return <MicIcon />;\r\n      case contentType.FOLLOWING:\r\n        return <HeadsetIcon />;\r\n      case contentType.FAVOURITES:\r\n        return <FavoriteIcon />;\r\n      default:\r\n        return <AccountCircleIcon />;\r\n    }\r\n  };\r\n\r\n  processTextForURL = (text) => {\r\n    if (text === contentType.LISTENINGTO) {\r\n      return \"whatimlisteningto\";\r\n    }\r\n    return text.toLowerCase();\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: this.props.open,\r\n            [classes.drawerClose]: !this.props.open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: this.props.open,\r\n              [classes.drawerClose]: !this.props.open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\r\n          {/*TODO: EITHER map username separately so it doesn't collide with other keywords OR block keywords from being used as username*/}\r\n          <List>\r\n            <ListItem\r\n              button\r\n              key={this.props.username}\r\n              // onClick={() => this.selectView(this.props.username)}\r\n            >\r\n              <Link\r\n                className={classes.sidebarItem}\r\n                to={\"/\" + this.props.username}\r\n              >\r\n                <ListItemIcon>{<AccountCircleIcon />}</ListItemIcon>\r\n                <ListItemText primary={this.props.username} color=\"inhereit\" />\r\n              </Link>\r\n            </ListItem>\r\n\r\n            {[\r\n              contentType.LISTENINGTO,\r\n              contentType.ALBUMS,\r\n              contentType.PLAYLISTS,\r\n              contentType.FOLLOWERS,\r\n              contentType.FOLLOWING,\r\n            ].map((text, index) => (\r\n              <ListItem\r\n                button\r\n                key={text}\r\n                // onClick={() => this.selectView(text)}\r\n              >\r\n                <Link\r\n                  className={classes.sidebarItem}\r\n                  to={\r\n                    \"/\" +\r\n                    this.props.username +\r\n                    \"/\" +\r\n                    this.processTextForURL(text)\r\n                  }\r\n                >\r\n                  <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </Link>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {[contentType.FAVOURITES].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {/* TODO: distinguish between active user/ logged in user once we have more than one profile */}\r\n          <Switch>\r\n            <Route path={\"/:user\"} exact>\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/:user/albums\">\r\n              <Post />\r\n            </Route>\r\n            <Route path=\"/:user/playlists\">\r\n              <Playlists />\r\n            </Route>\r\n            <Route path=\"/:user/followers\">\r\n              <Followers />\r\n            </Route>\r\n            <Route path=\"/:user/following\">\r\n              <Following />\r\n            </Route>\r\n            <Route path=\"/:user/whatimlisteningto\">\r\n              <NowPlaying />\r\n            </Route>\r\n            <Route path=\"/:user/feed\">\r\n              <Feed />\r\n            </Route>\r\n            <Route path=\"/:user/settings\">\r\n              <Settings />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.isSidebarOpen,\r\n    username: state.username,\r\n    // selectedContentPage: state.selectedContentPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleSideBar: () => dispatch(toggleSidebar()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(Sidebar));\r\n"]},"metadata":{},"sourceType":"module"}