{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Sidebar.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Post from \"./Post\";\nimport Playlists from \"./Playlists\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toggleSidebar } from \"../app/actions\";\nimport contentType from \"../data/ContentTypeEnum\"; // import ProfilePage from \"./content-page/ProfilePage\";\n// import FeedPage from \"./content-page/FeedPage\";\n// import HomePage from \"./content-page/HomePage\";\n\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport Followers from \"./Followers\";\nimport Following from \"./Following\";\nimport NowPlaying from \"./NowPlaying\";\nimport ProfilePage from \"./content-page/ProfilePage\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerClose = () => {\n      this.props.toggleSideBar();\n    };\n\n    this.selectView = text => {\n      this.setState({\n        viewPage: text\n      });\n    };\n\n    this.getSidebarIcon = text => {\n      switch (text) {\n        case contentType.LISTENINGTO:\n          return /*#__PURE__*/React.createElement(PlayCircleFilledIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.PLAYLISTS:\n          return /*#__PURE__*/React.createElement(QueueMusicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.POSTS:\n          return /*#__PURE__*/React.createElement(AudiotrackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWERS:\n          return /*#__PURE__*/React.createElement(MicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWING:\n          return /*#__PURE__*/React.createElement(HeadsetIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FAVOURITES:\n          return /*#__PURE__*/React.createElement(FavoriteIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(AccountCircleIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: this.props.open,\n        [classes.drawerClose]: !this.props.open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: this.props.open,\n          [classes.drawerClose]: !this.props.open\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, [this.props.username, contentType.LISTENINGTO, contentType.POSTS, contentType.PLAYLISTS, contentType.FOLLOWERS, contentType.FOLLOWING].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text,\n      onClick: () => this.selectView(text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(Link, {\n      to: this.props.username + \"/\" + text.toLowerCase(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, [contentType.FAVOURITES].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Post, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/playLists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Playlists, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/pollowers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Followers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Following, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/what i'm listening to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NowPlaying, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ProfilePage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    open: state.isSidebarOpen,\n    username: state.userName,\n    selectedContentPage: state.selectedContentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleSideBar: () => dispatch(toggleSidebar())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(Sidebar));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Sidebar.js"],"names":["React","clsx","Post","Playlists","Drawer","List","CssBaseline","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","AccountCircleIcon","AudiotrackIcon","HeadsetIcon","MicIcon","FavoriteIcon","QueueMusicIcon","PlayCircleFilledIcon","connect","withStyles","toggleSidebar","contentType","Link","Route","Switch","Followers","Following","NowPlaying","ProfilePage","drawerWidth","styles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Sidebar","Component","constructor","props","handleDrawerClose","toggleSideBar","selectView","text","setState","viewPage","getSidebarIcon","LISTENINGTO","PLAYLISTS","POSTS","FOLLOWERS","FOLLOWING","FAVOURITES","state","open","render","classes","paper","direction","username","map","index","toLowerCase","mapStateToProps","isSidebarOpen","userName","selectedContentPage","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport Post from \"./Post\";\r\nimport Playlists from \"./Playlists\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { toggleSidebar } from \"../app/actions\";\r\nimport contentType from \"../data/ContentTypeEnum\";\r\n// import ProfilePage from \"./content-page/ProfilePage\";\r\n// import FeedPage from \"./content-page/FeedPage\";\r\n// import HomePage from \"./content-page/HomePage\";\r\n\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport Followers from \"./Followers\";\r\nimport Following from \"./Following\";\r\nimport NowPlaying from \"./NowPlaying\";\r\nimport ProfilePage from \"./content-page/ProfilePage\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n});\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: false };\r\n  }\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.toggleSideBar();\r\n  };\r\n\r\n  // This is only temporary and will need to be switched over to redux global state\r\n  selectView = (text) => {\r\n    this.setState({ viewPage: text });\r\n  };\r\n\r\n  getSidebarIcon = (text) => {\r\n    switch (text) {\r\n      case contentType.LISTENINGTO:\r\n        return <PlayCircleFilledIcon />;\r\n      case contentType.PLAYLISTS:\r\n        return <QueueMusicIcon />;\r\n      case contentType.POSTS:\r\n        return <AudiotrackIcon />;\r\n      case contentType.FOLLOWERS:\r\n        return <MicIcon />;\r\n      case contentType.FOLLOWING:\r\n        return <HeadsetIcon />;\r\n      case contentType.FAVOURITES:\r\n        return <FavoriteIcon />;\r\n      default:\r\n        return <AccountCircleIcon />;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: this.props.open,\r\n            [classes.drawerClose]: !this.props.open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: this.props.open,\r\n              [classes.drawerClose]: !this.props.open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\r\n          {/*TODO: EITHER map username separately so it doesn't collide with other keywords OR block keywords from being used as username*/}\r\n          <List>\r\n            {[\r\n              this.props.username,\r\n              contentType.LISTENINGTO,\r\n              contentType.POSTS,\r\n              contentType.PLAYLISTS,\r\n              contentType.FOLLOWERS,\r\n              contentType.FOLLOWING,\r\n            ].map((text, index) => (\r\n              <ListItem button key={text} onClick={() => this.selectView(text)}>\r\n                <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                <Link to={this.props.username + \"/\" + text.toLowerCase()}>\r\n                  <ListItemText primary={text} />\r\n                </Link>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {[contentType.FAVOURITES].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route path=\"/posts\">\r\n              <Post />\r\n            </Route>\r\n            <Route path=\"/playLists\">\r\n              <Playlists />\r\n            </Route>\r\n            <Route path=\"/pollowers\">\r\n              <Followers />\r\n            </Route>\r\n            <Route path=\"/following\">\r\n              <Following />\r\n            </Route>\r\n            <Route path=\"/what i'm listening to\">\r\n              <NowPlaying />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <ProfilePage />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.isSidebarOpen,\r\n    username: state.userName,\r\n    selectedContentPage: state.selectedContentPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleSideBar: () => dispatch(toggleSidebar()),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(Sidebar));\r\n"]},"metadata":{},"sourceType":"module"}