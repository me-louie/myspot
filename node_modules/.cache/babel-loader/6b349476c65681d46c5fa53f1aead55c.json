{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"./components/Sidebar\";\nimport Appbar from \"./components/Appbar\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport Spotify from \"spotify-web-api-js\";\nimport { logIn, registerSpotifyWebApi, usernameSubmit } from \"./app/actions\";\nconst spotifyWebApi = new Spotify(); // const loginPage = () => {\n//   return (\n//     <div className=\"App\">\n//       <Login />\n//     </div>\n//   );\n// };\n\nconst lightTheme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#6200EE\",\n      variant: \"#3700B3\"\n    },\n    secondary: {\n      main: \"#03DAC6\",\n      variant: \"#018786\"\n    }\n  }\n});\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#BB86FC\",\n      variant: \"#3700B3\"\n    },\n    secondary: {\n      main: \"#03DAC6\"\n    }\n  }\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectTheme = () => this.props.accountSettings.darkmode ? darkTheme : lightTheme;\n\n    const params = this.getHashParams(); // console.log(\"params is: \");\n    // console.log(params);\n    // console.log(\"access token is \" + params.access_token);\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n      console.log(\"LOGGING IN: SENDING SPOTIFYWEBAPI TO REDUX STORE\");\n      console.log(spotifyWebApi);\n      this.props.registerSpotifyWebApi(params.access_token);\n      spotifyWebApi.getMe().then(response => {\n        console.log(\"user profile response object \");\n        console.log(response);\n        this.props.usernameSubmit(response.display_name);\n        this.props.logIn();\n      });\n    }\n  } // got this code from a Spotify API tutorial https://www.youtube.com/watch?v=prayNyuN3w0\n\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: this.selectTheme(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Appbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      // TODO: use React Router/redirect to from login page to main page after authentication is implemented\n      // return loginPage();\n      return (\n        /*#__PURE__*/\n        // <div>\n        //   <Button\n        //       // type=\"submit\"\n        //       href={\"http://localhost:8888\"}\n        //       fullWidth\n        //       variant=\"contained\"\n        //       color=\"primary\"\n        //       // onClick={this.attemptLogin}\n        //   >\n        //     Sign In With Spotify\n        //   </Button>\n        React.createElement(Login, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 9\n          }\n        })\n      );\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn,\n    username: state.username,\n    accountSettings: state.accountSettings\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: () => dispatch(logIn()),\n    usernameSubmit: username => dispatch(usernameSubmit(username)),\n    registerSpotifyWebApi: spotifyWebApi => dispatch(registerSpotifyWebApi(spotifyWebApi)) // selectContentPage: contentType => dispatch(selectContentPage(contentType))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/App.js"],"names":["React","connect","Sidebar","Appbar","Login","BrowserRouter","Router","createMuiTheme","ThemeProvider","Spotify","logIn","registerSpotifyWebApi","usernameSubmit","spotifyWebApi","lightTheme","palette","type","primary","main","variant","secondary","darkTheme","App","Component","constructor","props","selectTheme","accountSettings","darkmode","params","getHashParams","access_token","setAccessToken","console","log","getMe","then","response","display_name","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","isLoggedIn","mapStateToProps","state","username","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,KAAT,EAAgBC,qBAAhB,EAAuCC,cAAvC,QAA6D,eAA7D;AAEA,MAAMC,aAAa,GAAG,IAAIJ,OAAJ,EAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMK,UAAU,GAAGP,cAAc,CAAC;AAChCQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,OADC;AAEPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAFF;AAMPC,IAAAA,SAAS,EAAE;AACTF,MAAAA,IAAI,EAAE,SADG;AAETC,MAAAA,OAAO,EAAE;AAFA;AANJ;AADuB,CAAD,CAAjC;AAcA,MAAME,SAAS,GAAGd,cAAc,CAAC;AAC/BQ,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,SADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAFF;AAMPC,IAAAA,SAAS,EAAE;AACTF,MAAAA,IAAI,EAAE;AADG;AANJ;AADsB,CAAD,CAAhC;;AAYA,MAAMI,GAAN,SAAkBtB,KAAK,CAACuB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAiCnBC,WAjCmB,GAiCL,MACZ,KAAKD,KAAL,CAAWE,eAAX,CAA2BC,QAA3B,GAAsCP,SAAtC,GAAkDP,UAlCjC;;AAEjB,UAAMe,MAAM,GAAG,KAAKC,aAAL,EAAf,CAFiB,CAGjB;AACA;AACA;;AAEA,QAAID,MAAM,CAACE,YAAX,EAAyB;AACvBlB,MAAAA,aAAa,CAACmB,cAAd,CAA6BH,MAAM,CAACE,YAApC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYrB,aAAZ;AACA,WAAKY,KAAL,CAAWd,qBAAX,CAAiCkB,MAAM,CAACE,YAAxC;AACAlB,MAAAA,aAAa,CAACsB,KAAd,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,aAAKZ,KAAL,CAAWb,cAAX,CAA0ByB,QAAQ,CAACC,YAAnC;AACA,aAAKb,KAAL,CAAWf,KAAX;AACD,OALD;AAMD;AACF,GApB+B,CAsBhC;;;AACAoB,EAAAA,aAAa,GAAG;AACd,QAAIS,UAAU,GAAG,EAAjB;AACA,QAAIC,CAAJ;AAAA,QACEC,CAAC,GAAG,sBADN;AAAA,QAEEC,CAAC,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAFN;;AAGA,WAAQN,CAAC,GAAGC,CAAC,CAACM,IAAF,CAAOL,CAAP,CAAZ,EAAwB;AACtBH,MAAAA,UAAU,CAACC,CAAC,CAAC,CAAD,CAAF,CAAV,GAAmBQ,kBAAkB,CAACR,CAAC,CAAC,CAAD,CAAF,CAArC;AACD;;AACD,WAAOD,UAAP;AACD;;AAKDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKxB,KAAL,CAAWyB,UAAf,EAA2B;AACzB,0BACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE,KAAKxB,WAAL,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF;AAUD,KAXD,MAWO;AACL;AACA;AACA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF;AAcD;AACF;;AAnE+B;;AAsElC,MAAMyB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,UAAU,EAAEE,KAAK,CAACF,UADb;AAELG,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAFX;AAGL1B,IAAAA,eAAe,EAAEyB,KAAK,CAACzB;AAHlB,GAAP;AAKD,CAND;;AAQA,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL7C,IAAAA,KAAK,EAAE,MAAM6C,QAAQ,CAAC7C,KAAK,EAAN,CADhB;AAELE,IAAAA,cAAc,EAAGyC,QAAD,IAAcE,QAAQ,CAAC3C,cAAc,CAACyC,QAAD,CAAf,CAFjC;AAGL1C,IAAAA,qBAAqB,EAAGE,aAAD,IACrB0C,QAAQ,CAAC5C,qBAAqB,CAACE,aAAD,CAAtB,CAJL,CAKL;;AALK,GAAP;AAOD,CARD;;AAUA,eAAeZ,OAAO,CAACkD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChC,GAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Appbar from \"./components/Appbar\";\r\nimport Login from \"./components/Login\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { logIn, registerSpotifyWebApi, usernameSubmit } from \"./app/actions\";\r\n\r\nconst spotifyWebApi = new Spotify();\r\n\r\n// const loginPage = () => {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Login />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#6200EE\",\r\n      variant: \"#3700B3\",\r\n    },\r\n    secondary: {\r\n      main: \"#03DAC6\",\r\n      variant: \"#018786\",\r\n    },\r\n  },\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#BB86FC\",\r\n      variant: \"#3700B3\",\r\n    },\r\n    secondary: {\r\n      main: \"#03DAC6\",\r\n    },\r\n  },\r\n});\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const params = this.getHashParams();\r\n    // console.log(\"params is: \");\r\n    // console.log(params);\r\n    // console.log(\"access token is \" + params.access_token);\r\n\r\n    if (params.access_token) {\r\n      spotifyWebApi.setAccessToken(params.access_token);\r\n      console.log(\"LOGGING IN: SENDING SPOTIFYWEBAPI TO REDUX STORE\");\r\n      console.log(spotifyWebApi);\r\n      this.props.registerSpotifyWebApi(params.access_token);\r\n      spotifyWebApi.getMe().then((response) => {\r\n        console.log(\"user profile response object \");\r\n        console.log(response);\r\n        this.props.usernameSubmit(response.display_name);\r\n        this.props.logIn();\r\n      });\r\n    }\r\n  }\r\n\r\n  // got this code from a Spotify API tutorial https://www.youtube.com/watch?v=prayNyuN3w0\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  }\r\n\r\n  selectTheme = () =>\r\n    this.props.accountSettings.darkmode ? darkTheme : lightTheme;\r\n\r\n  render() {\r\n    if (this.props.isLoggedIn) {\r\n      return (\r\n        <ThemeProvider theme={this.selectTheme()}>\r\n          <Router>\r\n            <div className=\"App\">\r\n              <Appbar />\r\n              <Sidebar />\r\n            </div>\r\n          </Router>\r\n        </ThemeProvider>\r\n      );\r\n    } else {\r\n      // TODO: use React Router/redirect to from login page to main page after authentication is implemented\r\n      // return loginPage();\r\n      return (\r\n        // <div>\r\n        //   <Button\r\n        //       // type=\"submit\"\r\n        //       href={\"http://localhost:8888\"}\r\n        //       fullWidth\r\n        //       variant=\"contained\"\r\n        //       color=\"primary\"\r\n        //       // onClick={this.attemptLogin}\r\n        //   >\r\n        //     Sign In With Spotify\r\n        //   </Button>\r\n        <Login />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggedIn: state.isLoggedIn,\r\n    username: state.username,\r\n    accountSettings: state.accountSettings,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logIn: () => dispatch(logIn()),\r\n    usernameSubmit: (username) => dispatch(usernameSubmit(username)),\r\n    registerSpotifyWebApi: (spotifyWebApi) =>\r\n      dispatch(registerSpotifyWebApi(spotifyWebApi)),\r\n    // selectContentPage: contentType => dispatch(selectContentPage(contentType))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}