{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\feed\\\\Post.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { Avatar, Grid, IconButton, Link, Menu, MenuItem, Paper } from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\nimport ReplyIcon from \"@material-ui/icons/Reply\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { withStyles } from \"@material-ui/core/styles\";\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    display: \"flex\",\n    padding: 10,\n    borderRadius: 16,\n    margin: 5\n  },\n  display: {\n    display: \"flex\",\n    padding: 0,\n    borderRadius: 12,\n    margin: 5\n  },\n  userGrid: {\n    margin: 5\n  },\n  button: {\n    padding: 0,\n    width: 30,\n    height: 30,\n    fontSize: \"0.6rem\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  buttongroup: {\n    margin: 0,\n    padding: 0\n  },\n  moreGid: {\n    maxWidth: 50\n  },\n  media: {// media style\n  }\n};\nconst menuOptions = [\"edit\", \"delete\", \"report\"];\n\nclass Post extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      moreOptions: false,\n      anchorEl: null\n    };\n\n    this.goToMedia = () => {// TODO GOTO media\n    };\n\n    this.like = id => {\n      this.props.toggleLike();\n    };\n\n    this.repost = post => {\n      // create new post\n      console.log(post);\n    };\n\n    this.share = type => {\n      // TODO share spotify media\n      console.log(type);\n    };\n\n    this.addPostMedia = type => {\n      // TODO: add song, album, or playlist\n      console.log(type);\n    };\n\n    this.openMoreOptions = e => {\n      this.setState({\n        moreOptions: true,\n        anchorEl: e.currentTarget\n      });\n    };\n\n    this.closeOptions = () => {\n      this.setState({\n        moreOptions: false,\n        anchorEl: null\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      postdata\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 2,\n      spacing: 1,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"center\",\n      className: classes.userGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.display,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"DP\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, postdata.username)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: 9,\n      spacing: 2,\n      direction: \"column\",\n      justify: \"center\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, postdata.content), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      component: \"button\",\n      variant: \"body2\",\n      onClick: () => this.goToMedia(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, postdata.title))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      xs: true,\n      className: classes.moreGrid,\n      justify: \"flex-end\",\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"more\",\n      \"aria-controls\": \"long-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: e => this.openMoreOptions(e),\n      className: classes.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Menu, {\n      id: \"options-menu\",\n      anchorEl: this.state.anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      keepMounted: true,\n      open: this.state.moreOptions,\n      onClose: this.closeOptions,\n      PaperProps: {\n        style: {\n          maxHeight: 300,\n          width: \"20ch\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, menuOptions.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n      key: option,\n      onClick: () => this.closeOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, option)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      className: classes.buttongroup,\n      direction: \"row\",\n      justify: \"flex-end\",\n      alignItems: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button,\n      size: \"small\",\n      \"aria-label\": \"like\",\n      \"aria-controls\": \"like-post\",\n      onClick: () => this.like(this.props.key),\n      color: postdata.usersLiked.has(this.props.userId) ? \"primary\" : \"default\" // color=\"primary\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    }, postdata.usersLiked.size, /*#__PURE__*/React.createElement(EmojiEmotionsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button,\n      size: \"small\",\n      \"aria-label\": \"repost\",\n      \"aria-controls\": \"repost-post\",\n      onClick: () => this.repost(postdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ReplyIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button,\n      size: \"small\",\n      \"aria-label\": \"share\",\n      \"aria-controls\": \"share-post\",\n      onClick: () => this.share(postdata.type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ShareIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.button,\n      size: \"small\",\n      \"aria-label\": \"add\",\n      \"aria-controls\": \"add-media\",\n      onClick: () => this.addPostMedia(postdata.type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(LibraryAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  postdata: PropTypes.object.isRequired\n};\nexport default compose(withStyles(styles))(Post);","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/feed/Post.js"],"names":["React","Component","PropTypes","compose","Avatar","Grid","IconButton","Link","Menu","MenuItem","Paper","MoreVertIcon","EmojiEmotionsIcon","LibraryAddIcon","ReplyIcon","ShareIcon","withStyles","styles","root","flexGrow","paper","display","padding","borderRadius","margin","userGrid","button","width","height","fontSize","backgroundColor","buttongroup","moreGid","maxWidth","media","menuOptions","Post","state","moreOptions","anchorEl","goToMedia","like","id","props","toggleLike","repost","post","console","log","share","type","addPostMedia","openMoreOptions","e","setState","currentTarget","closeOptions","render","classes","postdata","username","content","title","moreGrid","vertical","horizontal","style","maxHeight","map","option","key","usersLiked","has","userId","size","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Menu,\r\n  MenuItem,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport LibraryAddIcon from \"@material-ui/icons/LibraryAdd\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n    borderRadius: 16,\r\n    margin: 5,\r\n  },\r\n  display: {\r\n    display: \"flex\",\r\n    padding: 0,\r\n    borderRadius: 12,\r\n    margin: 5,\r\n  },\r\n  userGrid: {\r\n    margin: 5,\r\n  },\r\n  button: {\r\n    padding: 0,\r\n    width: 30,\r\n    height: 30,\r\n    fontSize: \"0.6rem\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  buttongroup: {\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  moreGid: {\r\n    maxWidth: 50,\r\n  },\r\n  media: {\r\n    // media style\r\n  },\r\n};\r\n\r\nconst menuOptions = [\"edit\", \"delete\", \"report\"];\r\n\r\nclass Post extends Component {\r\n  state = {\r\n    moreOptions: false,\r\n    anchorEl: null,\r\n  };\r\n\r\n  goToMedia = () => {\r\n    // TODO GOTO media\r\n  };\r\n\r\n  like = (id) => {\r\n    this.props.toggleLike();\r\n  };\r\n\r\n  repost = (post) => {\r\n    // create new post\r\n    console.log(post);\r\n  };\r\n\r\n  share = (type) => {\r\n    // TODO share spotify media\r\n    console.log(type);\r\n  };\r\n\r\n  addPostMedia = (type) => {\r\n    // TODO: add song, album, or playlist\r\n    console.log(type);\r\n  };\r\n\r\n  openMoreOptions = (e) => {\r\n    this.setState({\r\n      moreOptions: true,\r\n      anchorEl: e.currentTarget,\r\n    });\r\n  };\r\n\r\n  closeOptions = () => {\r\n    this.setState({\r\n      moreOptions: false,\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, postdata } = this.props;\r\n    return (\r\n      <Paper className={classes.paper}>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={2}\r\n          spacing={1}\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          className={classes.userGrid}\r\n        >\r\n          <Grid item>\r\n            <Avatar className={classes.display}>DP</Avatar>\r\n          </Grid>\r\n          <Grid item>{postdata.username}</Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid\r\n            item\r\n            container\r\n            xs={9}\r\n            spacing={2}\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item>{postdata.content}</Grid>\r\n            <Grid item>\r\n              <Link\r\n                component=\"button\"\r\n                variant=\"body2\"\r\n                onClick={() => this.goToMedia()}\r\n              >\r\n                {postdata.title}\r\n              </Link>\r\n            </Grid>\r\n            {/* TODO add media art component? */}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            xs\r\n            className={classes.moreGrid}\r\n            justify=\"flex-end\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <Grid item>\r\n              <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={(e) => this.openMoreOptions(e)}\r\n                className={classes.button}\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Menu\r\n              id=\"options-menu\"\r\n              anchorEl={this.state.anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              open={this.state.moreOptions}\r\n              onClose={this.closeOptions}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: 300,\r\n                  width: \"20ch\",\r\n                },\r\n              }}\r\n            >\r\n              {menuOptions.map((option) => (\r\n                <MenuItem key={option} onClick={() => this.closeOptions()}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            container\r\n            className={classes.buttongroup}\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            alignItems=\"flex-end\"\r\n          >\r\n            <Grid item>\r\n              <IconButton\r\n                className={classes.button}\r\n                size=\"small\"\r\n                aria-label=\"like\"\r\n                aria-controls=\"like-post\"\r\n                onClick={() => this.like(this.props.key)}\r\n                color={\r\n                  postdata.usersLiked.has(this.props.userId)\r\n                    ? \"primary\"\r\n                    : \"default\"\r\n                }\r\n                // color=\"primary\"\r\n              >\r\n                {postdata.usersLiked.size}\r\n                <EmojiEmotionsIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                className={classes.button}\r\n                size=\"small\"\r\n                aria-label=\"repost\"\r\n                aria-controls=\"repost-post\"\r\n                onClick={() => this.repost(postdata)}\r\n              >\r\n                <ReplyIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                className={classes.button}\r\n                size=\"small\"\r\n                aria-label=\"share\"\r\n                aria-controls=\"share-post\"\r\n                onClick={() => this.share(postdata.type)}\r\n              >\r\n                <ShareIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton\r\n                className={classes.button}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n                aria-controls=\"add-media\"\r\n                onClick={() => this.addPostMedia(postdata.type)}\r\n              >\r\n                <LibraryAddIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nPost.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  postdata: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(withStyles(styles))(Post);\r\n"]},"metadata":{},"sourceType":"module"}