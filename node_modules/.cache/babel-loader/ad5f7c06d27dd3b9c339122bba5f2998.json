{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Settings.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { toggleNotifications, toggleDarkmode, changeLang } from \"../app/actions\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  header: {\n    fontSize: 25,\n    margin: theme.spacing(2, 0)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  profilePic: {\n    fontSize: 90\n  },\n  userdata: {\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"center\"\n  },\n  content: {\n    direction: \"column\",\n    justifycontent: \"flex-start\",\n    alignItems: \"flex-start\",\n    padding: theme.spacing(2)\n  },\n  setting: {\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\"\n  }\n});\n\nconst languages = [\"English\", \"French\", \"Spanish\"];\n\nclass Settings extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleNotifToggle = () => {\n      this.props.toggleNotifications(this.props.accountSettings.notifications);\n    };\n\n    this.handleDarkmodeToggle = () => {\n      this.props.toggleDarkmode(this.props.accountSettings.darkmode);\n    };\n\n    this.handleLangSelect = event => {\n      this.props.changeLang(event.target.value);\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Account Settings\"), /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.userdata,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AccountCircleIcon, {\n      className: classes.profilePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.content,\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Username: \", this.props.username)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Email: associatedEmail@gmail.com\"))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.setting,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Notifications\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.props.accountSettings.notifications,\n      onChange: this.handleNotifToggle,\n      name: \"notifications\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      className: classes.setting,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Dark Mode\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      checked: this.props.accountSettings.darkmode,\n      onChange: this.handleDarkmodeToggle,\n      name: \"darkmode\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"combo-box-lang-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, \"Language\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"combo-box-lang-label\",\n      id: \"combo-box-lang\",\n      style: {\n        width: 200\n      },\n      color: \"primary\",\n      onChange: this.handleLangSelect,\n      value: this.props.accountSettings.language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, languages.map((text, index) => /*#__PURE__*/React.createElement(MenuItem, {\n      value: text,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, text))))), /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Additional Settings Here\"), /*#__PURE__*/React.createElement(Divider, {\n      className: classes.divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Additional Settings Here\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Disable Account\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  username: state.username,\n  accountSettings: state.accountSettings\n});\n\nexport default connect(mapStateToProps, {\n  toggleNotifications,\n  toggleDarkmode,\n  changeLang\n})(withStyles(styles, {\n  withTheme: true\n})(Settings));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Settings.js"],"names":["React","Grid","Paper","Divider","Switch","InputLabel","MenuItem","FormControl","Select","connect","withStyles","Typography","AccountCircleIcon","toggleNotifications","toggleDarkmode","changeLang","styles","theme","root","flexGrow","header","fontSize","margin","spacing","paper","padding","textAlign","color","palette","text","secondary","divider","profilePic","userdata","direction","justify","alignItems","content","justifycontent","setting","languages","Settings","Component","handleNotifToggle","props","accountSettings","notifications","handleDarkmodeToggle","darkmode","handleLangSelect","event","target","value","render","classes","username","formControl","width","language","map","index","mapStateToProps","state","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport {\r\n  toggleNotifications,\r\n  toggleDarkmode,\r\n  changeLang,\r\n} from \"../app/actions\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  profilePic: {\r\n    fontSize: 90,\r\n  },\r\n  userdata: {\r\n    direction: \"row\",\r\n    justify: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  content: {\r\n    direction: \"column\",\r\n    justifycontent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  setting: {\r\n    direction: \"row\",\r\n    justify: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst languages = [\"English\", \"French\", \"Spanish\"];\r\n\r\nclass Settings extends React.Component {\r\n  handleNotifToggle = () => {\r\n    this.props.toggleNotifications(this.props.accountSettings.notifications);\r\n  };\r\n\r\n  handleDarkmodeToggle = () => {\r\n    this.props.toggleDarkmode(this.props.accountSettings.darkmode);\r\n  };\r\n  handleLangSelect = (event) => {\r\n    this.props.changeLang(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.header}>Account Settings</Typography>\r\n        <Divider className={classes.divider} />\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Grid className={classes.userdata} container>\r\n                {/* TODO: will we allow user to upload a new pic which is different from their spotify account pic? */}\r\n                <AccountCircleIcon className={classes.profilePic} />\r\n                <Grid className={classes.content} item>\r\n                  <Grid item>\r\n                    <Typography>Username: {this.props.username}</Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Typography>Email: associatedEmail@gmail.com</Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            {/* <Divider className={classes.divider} /> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Grid className={classes.setting} container>\r\n                  <Grid item>\r\n                    <Typography>Notifications</Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Switch\r\n                      checked={this.props.accountSettings.notifications}\r\n                      onChange={this.handleNotifToggle}\r\n                      name=\"notifications\"\r\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider} />\r\n                <Grid className={classes.setting} container>\r\n                  <Grid item>\r\n                    <Typography>Dark Mode</Typography>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Switch\r\n                      checked={this.props.accountSettings.darkmode}\r\n                      onChange={this.handleDarkmodeToggle}\r\n                      name=\"darkmode\"\r\n                      inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Divider className={classes.divider} />\r\n                <Grid item>\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"combo-box-lang-label\">Language</InputLabel>\r\n                    <Select\r\n                      labelId=\"combo-box-lang-label\"\r\n                      id=\"combo-box-lang\"\r\n                      style={{ width: 200 }}\r\n                      color=\"primary\"\r\n                      onChange={this.handleLangSelect}\r\n                      value={this.props.accountSettings.language}\r\n                    >\r\n                      {languages.map((text, index) => (\r\n                        <MenuItem value={text} key={index}>\r\n                          {text}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Divider className={classes.divider} />\r\n                <Typography>Additional Settings Here</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography>Additional Settings Here</Typography>\r\n              </Paper>\r\n            </Grid>\r\n            {/* <Divider className={classes.divider} /> */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Typography>Disable Account</Typography>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.username,\r\n  accountSettings: state.accountSettings,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleNotifications,\r\n  toggleDarkmode,\r\n  changeLang,\r\n})(withStyles(styles, { withTheme: true })(Settings));\r\n"]},"metadata":{},"sourceType":"module"}