{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Sidebar.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { toggleSidebar } from \"../app/actions\";\nimport contentType from \"../data/ContentTypeEnum\";\nimport ProfilePage from \"./content-page/ProfilePage\";\nimport FeedPage from \"./content-page/FeedPage\";\nimport HomePage from \"./content-page/HomePage\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerClose = () => {\n      this.props.toggleSideBar();\n    };\n\n    this.getSidebarIcon = text => {\n      switch (text) {\n        case contentType.LISTENINGTO:\n          return /*#__PURE__*/React.createElement(PlayCircleFilledIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.PLAYLISTS:\n          return /*#__PURE__*/React.createElement(QueueMusicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.POSTS:\n          return /*#__PURE__*/React.createElement(AudiotrackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWERS:\n          return /*#__PURE__*/React.createElement(MicIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FOLLOWING:\n          return /*#__PURE__*/React.createElement(HeadsetIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FAVOURITES:\n          return /*#__PURE__*/React.createElement(FavoriteIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(AccountCircleIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.displayContentPage = () => {\n      console.log(this.props.selectedContentPage);\n\n      switch (this.props.selectedContentPage) {\n        case contentType.PROFILE:\n          return /*#__PURE__*/React.createElement(ProfilePage, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 16\n            }\n          });\n\n        case contentType.FEED:\n          return /*#__PURE__*/React.createElement(FeedPage, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(HomePage, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      theme\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Drawer, {\n      variant: \"permanent\",\n      className: clsx(classes.drawer, {\n        [classes.drawerOpen]: this.props.open,\n        [classes.drawerClose]: !this.props.open\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: this.props.open,\n          [classes.drawerClose]: !this.props.open\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, theme.direction === \"rtl\" ? /*#__PURE__*/React.createElement(ChevronRightIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, [this.props.username, contentType.LISTENINGTO, contentType.POSTS, contentType.PLAYLISTS, contentType.FOLLOWERS, contentType.FOLLOWING].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, [contentType.FAVOURITES].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, this.getSidebarIcon(text)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }), this.displayContentPage()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    open: state.isSidebarOpen,\n    username: state.userName,\n    selectedContentPage: state.selectedContentPage\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleSideBar: () => dispatch(toggleSidebar())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(Sidebar));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Sidebar.js"],"names":["React","clsx","Drawer","List","CssBaseline","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","AccountCircleIcon","AudiotrackIcon","HeadsetIcon","MicIcon","FavoriteIcon","QueueMusicIcon","PlayCircleFilledIcon","connect","withStyles","toggleSidebar","contentType","ProfilePage","FeedPage","HomePage","drawerWidth","styles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Sidebar","Component","constructor","props","handleDrawerClose","toggleSideBar","getSidebarIcon","text","LISTENINGTO","PLAYLISTS","POSTS","FOLLOWERS","FOLLOWING","FAVOURITES","displayContentPage","console","log","selectedContentPage","PROFILE","FEED","state","open","render","classes","paper","direction","username","map","index","mapStateToProps","isSidebarOpen","userName","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { toggleSidebar } from \"../app/actions\";\r\nimport contentType from \"../data/ContentTypeEnum\";\r\nimport ProfilePage from \"./content-page/ProfilePage\";\r\nimport FeedPage from \"./content-page/FeedPage\";\r\nimport HomePage from \"./content-page/HomePage\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n});\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: false };\r\n  }\r\n\r\n  handleDrawerClose = () => {\r\n    this.props.toggleSideBar();\r\n  };\r\n\r\n  getSidebarIcon = (text) => {\r\n    switch (text) {\r\n      case contentType.LISTENINGTO:\r\n        return <PlayCircleFilledIcon />;\r\n      case contentType.PLAYLISTS:\r\n        return <QueueMusicIcon />;\r\n      case contentType.POSTS:\r\n        return <AudiotrackIcon />;\r\n      case contentType.FOLLOWERS:\r\n        return <MicIcon />;\r\n      case contentType.FOLLOWING:\r\n        return <HeadsetIcon />;\r\n      case contentType.FAVOURITES:\r\n        return <FavoriteIcon />;\r\n      default:\r\n        return <AccountCircleIcon />;\r\n    }\r\n  };\r\n\r\n  displayContentPage = () => {\r\n    console.log(this.props.selectedContentPage);\r\n    switch (this.props.selectedContentPage) {\r\n      case contentType.PROFILE:\r\n        return <ProfilePage />;\r\n      case contentType.FEED:\r\n        return <FeedPage />;\r\n      default:\r\n        return <HomePage />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: this.props.open,\r\n            [classes.drawerClose]: !this.props.open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: this.props.open,\r\n              [classes.drawerClose]: !this.props.open,\r\n            }),\r\n          }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\r\n          {/*TODO: EITHER map username separately so it doesn't collide with other keywords OR block keywords from being used as username*/}\r\n          <List>\r\n            {[\r\n              this.props.username,\r\n              contentType.LISTENINGTO,\r\n              contentType.POSTS,\r\n              contentType.PLAYLISTS,\r\n              contentType.FOLLOWERS,\r\n              contentType.FOLLOWING\r\n            ].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {[contentType.FAVOURITES].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{this.getSidebarIcon(text)}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          {/*content pages are displayed here*/}\r\n          {this.displayContentPage()}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.isSidebarOpen,\r\n    username: state.userName,\r\n    selectedContentPage: state.selectedContentPage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    toggleSideBar: () => dispatch(toggleSidebar())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(\r\n  withStyles(styles, { withTheme: true })(Sidebar)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}