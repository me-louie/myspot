{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pearls\\\\Desktop\\\\Summer 2020\\\\CPSC 436i\\\\Project\\\\myspot\\\\src\\\\components\\\\Appbar.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { withStyles } from \"@material-ui/core\";\nimport { logOut, toggleSidebar } from \"../app/actions\";\nimport contentType from \"../data/ContentTypeEnum\"; // import ProfilePage from \"../components/content-page/ProfilePage\";\n\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  appbarButton: {\n    marginLeft: 50,\n    fontSize: 16,\n    textDecoration: \"none\",\n    color: \"white\"\n  },\n  appTitle: {\n    display: \"flex\",\n    fontSize: 25,\n    flexShrink: 1\n  },\n  hide: {\n    display: \"none\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\n\nclass Appbar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDrawerOpen = () => {\n      this.props.toggleSidebar();\n    };\n\n    this.logOut = () => {\n      this.props.logOut();\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AppBar, {\n      position: \"fixed\",\n      className: clsx(classes.appBar, {\n        [classes.appBarShift]: this.props.open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open drawer\",\n      onClick: this.handleDrawerOpen,\n      edge: \"start\",\n      className: clsx(classes.menuButton, {\n        [classes.hide]: this.props.open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      noWrap: false,\n      className: classes.appTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"MySpot\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\" + this.props.username,\n      className: classes.appbarButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button // onClick={() => this.props.selectContentPage(contentType.PROFILE)}\n    , {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, contentType.PROFILE)), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\" + this.props.username + \"/feed\",\n      className: classes.appbarButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button // className={classes.appbarButton}\n    , {\n      color: \"inherit\" // onClick={() => this.props.selectContentPage(contentType.FEED)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, contentType.FEED)), /*#__PURE__*/React.createElement(Button, {\n      className: classes.appbarButton,\n      color: \"inherit\",\n      onClick: this.logOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Logout\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\" + this.props.username + \"/settings\",\n      className: classes.appbarButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    open: state.isSidebarOpen,\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleSidebar: () => dispatch(toggleSidebar()),\n    logOut: () => dispatch(logOut()) // selectContentPage: (contentType) =>\n    //   dispatch(selectContentPage(contentType)),\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, {\n  withTheme: true\n})(Appbar));","map":{"version":3,"sources":["C:/Users/Pearls/Desktop/Summer 2020/CPSC 436i/Project/myspot/src/components/Appbar.js"],"names":["React","clsx","AppBar","Toolbar","Typography","IconButton","MenuIcon","Button","SettingsIcon","withStyles","logOut","toggleSidebar","contentType","connect","Link","drawerWidth","styles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","appbarButton","fontSize","textDecoration","color","appTitle","flexShrink","hide","toolbar","alignItems","justifyContent","padding","spacing","mixins","content","flexGrow","Appbar","Component","handleDrawerOpen","props","render","classes","open","username","PROFILE","FEED","mapStateToProps","state","isSidebarOpen","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { logOut, toggleSidebar } from \"../app/actions\";\r\nimport contentType from \"../data/ContentTypeEnum\";\r\n// import ProfilePage from \"../components/content-page/ProfilePage\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n\r\n  appbarButton: {\r\n    marginLeft: 50,\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n  },\r\n  appTitle: {\r\n    display: \"flex\",\r\n    fontSize: 25,\r\n    flexShrink: 1,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n});\r\n\r\nclass Appbar extends React.Component {\r\n  handleDrawerOpen = () => {\r\n    this.props.toggleSidebar();\r\n  };\r\n\r\n  logOut = () => {\r\n    this.props.logOut();\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: this.props.open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={this.handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: this.props.open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography noWrap={false} className={classes.appTitle}>\r\n            MySpot\r\n          </Typography>\r\n          <Link to={\"/\" + this.props.username} className={classes.appbarButton}>\r\n            <Button\r\n              // onClick={() => this.props.selectContentPage(contentType.PROFILE)}\r\n              color=\"inherit\"\r\n            >\r\n              {contentType.PROFILE}\r\n            </Button>\r\n          </Link>\r\n          <Link\r\n            to={\"/\" + this.props.username + \"/feed\"}\r\n            className={classes.appbarButton}\r\n          >\r\n            <Button\r\n              // className={classes.appbarButton}\r\n              color=\"inherit\"\r\n              // onClick={() => this.props.selectContentPage(contentType.FEED)}\r\n            >\r\n              {contentType.FEED}\r\n            </Button>\r\n          </Link>\r\n\r\n          <Button\r\n            className={classes.appbarButton}\r\n            color=\"inherit\"\r\n            onClick={this.logOut}\r\n          >\r\n            Logout\r\n          </Button>\r\n          <Link\r\n            to={\"/\" + this.props.username + \"/settings\"}\r\n            className={classes.appbarButton}\r\n          >\r\n            <Button color=\"inherit\">\r\n              <SettingsIcon />\r\n            </Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    open: state.isSidebarOpen,\r\n    username: state.username,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toggleSidebar: () => dispatch(toggleSidebar()),\r\n    logOut: () => dispatch(logOut()),\r\n    // selectContentPage: (contentType) =>\r\n    //   dispatch(selectContentPage(contentType)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles, { withTheme: true })(Appbar));\r\n"]},"metadata":{},"sourceType":"module"}